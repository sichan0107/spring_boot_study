package board.service;

import java.util.Iterator;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.util.ObjectUtils;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;

import board.dto.BoardDto;
import board.mapper.BoardMapper;

@Service
// 어노테이션을 이용한 트랜잭션 설정
@Transactional
public class BoardServiceImpl implements BoardService{
	
	//DAO Bean
	@Autowired
	private BoardMapper boardMapper; 
	
	@Override
	public List<BoardDto> selectBoardList() throws Exception{
		return boardMapper.selectBoardList();
	}
	
	@Override
	public void insertBoard(BoardDto board, MultipartHttpServletRequest multipartServletRequest) throws Exception{
		//boardMapper.insertBoard(board); 
		if(ObjectUtils.isEmpty(multipartServletRequest) == false) {
			Iterator<String> iterator = multipartServletRequest.getFileNames();
			String name;
			while(iterator.hasNext()) {
				name = iterator.next();
				System.out.println("file tag name : " + name);
				List<MultipartFile> list = multipartServletRequest.getFiles(name);
				for(MultipartFile multiPartFile : list) {
					System.out.println("파일 정보 출력 시작");
					System.out.println("파일명 : " + multiPartFile.getOriginalFilename());
					System.out.println("파일 사이즈 : " + multiPartFile.getSize());
					System.out.println("파일 타입 : " + multiPartFile.getContentType());
					System.out.println("출력 종료");
				}
			}
		}
	}
	
	@Override
	public BoardDto selectBoardDetail(int boardIdx) throws Exception{
		boardMapper.updateHitCount(boardIdx);
		BoardDto board = boardMapper.selectBoardDetail(boardIdx);
		return board;
	}
	
	@Override
	public void updateBoard(BoardDto board) throws Exception{
		boardMapper.updateBoard(board);
	}
	
	@Override
	public void deleteBoard(int boardIdx) throws Exception {
		boardMapper.deleteBoard(boardIdx);
	}
}
